// C++ class header boilerplate exported from ReflectionTool
// This is automatically generated by the tools.
// DO NOT modify this manually!

#include "TestHeader.h"
#include "TestHeader2.h"
#include "RefelectionHelper.h"
#include "RefJson.h"

using namespace cppfd;
static const ReflectiveClass<TestClass> g_refTestClass = ReflectiveClass<TestClass>("TestClass")
	.RefConstructor()
	.RefConstructor<int, const std::string &>()
	.RefConstMethod(&TestClass::Output,"Output")
	.RefStaticMethod(&TestClass::StaticOutput,"StaticOutput")
	.RefStaticMethod(&TestClass::StaticOutput2,"StaticOutput2")
	.RefStaticMethod(&TestClass::StaticOutput3,"StaticOutput3")
	.RefStaticMethod(&TestClass::StaticOutput4,"StaticOutput4")
	.RefMethod(&TestClass::SetIntVal,"SetIntVal")
	.RefMethod(&TestClass::SetStringVal,"SetStringVal")
	.RefConstMethod(&TestClass::VirtualFunc,"VirtualFunc", true)
	.RefField(&TestClass::mIntVal,"mIntVal")
	.RefField(&TestClass::mStrVal,"mStrVal")
	.RefStaticField(&TestClass::mStaticIntVal,"mStaticIntVal");
static const ReflectiveClass<JsonArray<TestClass> > g_refTestClassArray = ReflectiveClass<JsonArray<TestClass> >((JsonBase*)nullptr);
static const ReflectiveClass<JsonMap<TestClass> > g_refTestClassMap = ReflectiveClass<JsonMap<TestClass> >((JsonBase*)nullptr);

static const ReflectiveClass<TestSubClass> g_refTestSubClass = ReflectiveClass<TestSubClass>("TestSubClass", (TestClass *)0)
	.RefConstructor()
	.RefField(&TestSubClass::mArray,"mArray");
static const ReflectiveClass<JsonArray<TestSubClass> > g_refTestSubClassArray = ReflectiveClass<JsonArray<TestSubClass> >((JsonBase*)nullptr);
static const ReflectiveClass<JsonMap<TestSubClass> > g_refTestSubClassMap = ReflectiveClass<JsonMap<TestSubClass> >((JsonBase*)nullptr);

static const ReflectiveClass<ServerMsg> g_refServerMsg = ReflectiveClass<ServerMsg>("ServerMsg")
	.RefStaticMethod(&ServerMsg::Ping,"Ping");
static const ReflectiveClass<JsonArray<ServerMsg> > g_refServerMsgArray = ReflectiveClass<JsonArray<ServerMsg> >((JsonBase*)nullptr);
static const ReflectiveClass<JsonMap<ServerMsg> > g_refServerMsgMap = ReflectiveClass<JsonMap<ServerMsg> >((JsonBase*)nullptr);

static const ReflectiveClass<ClientMsg> g_refClientMsg = ReflectiveClass<ClientMsg>("ClientMsg")
	.RefStaticMethod(&ClientMsg::Pong,"Pong");
static const ReflectiveClass<JsonArray<ClientMsg> > g_refClientMsgArray = ReflectiveClass<JsonArray<ClientMsg> >((JsonBase*)nullptr);
static const ReflectiveClass<JsonMap<ClientMsg> > g_refClientMsgMap = ReflectiveClass<JsonMap<ClientMsg> >((JsonBase*)nullptr);

static const ReflectiveClass<TestStruct> g_refTestStruct = ReflectiveClass<TestStruct>("TestStruct")
	.RefField(&TestStruct::mVal,"mVal")
	.RefField(&TestStruct::StrArray,"StrArray")
	.RefField(&TestStruct::IntValMap,"IntValMap");
static const ReflectiveClass<JsonArray<TestStruct> > g_refTestStructArray = ReflectiveClass<JsonArray<TestStruct> >((JsonBase*)nullptr);
static const ReflectiveClass<JsonMap<TestStruct> > g_refTestStructMap = ReflectiveClass<JsonMap<TestStruct> >((JsonBase*)nullptr);

static const ReflectiveClass<TestBaseObj> g_refTestBaseObj = ReflectiveClass<TestBaseObj>("TestBaseObj")
	.RefField(&TestBaseObj::Content,"Content")
	.RefField(&TestBaseObj::BoolVal,"BoolVal")
	.RefField(&TestBaseObj::ShortVal,"ShortVal")
	.RefField(&TestBaseObj::IntVal,"IntVal")
	.RefField(&TestBaseObj::Int64Val,"Int64Val")
	.RefField(&TestBaseObj::StrVal,"StrVal")
	.RefField(&TestBaseObj::FloatVal,"FloatVal")
	.RefField(&TestBaseObj::DoubleVal,"DoubleVal")
	.RefField(&TestBaseObj::SubObj,"SubObj")
	.RefField(&TestBaseObj::SubObjArray,"SubObjArray")
	.RefField(&TestBaseObj::SubObjMap,"SubObjMap");
static const ReflectiveClass<JsonArray<TestBaseObj> > g_refTestBaseObjArray = ReflectiveClass<JsonArray<TestBaseObj> >((JsonBase*)nullptr);
static const ReflectiveClass<JsonMap<TestBaseObj> > g_refTestBaseObjMap = ReflectiveClass<JsonMap<TestBaseObj> >((JsonBase*)nullptr);

